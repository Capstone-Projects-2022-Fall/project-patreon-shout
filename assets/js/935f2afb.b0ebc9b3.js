"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Project Abstract","href":"/project-patreon-shout/docs/intro","docId":"intro"},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-patreon-shout/docs/requirements/system-overview","docId":"requirements/system-overview"},{"type":"link","label":"System Block Diagram","href":"/project-patreon-shout/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram"},{"type":"link","label":"General Requirements","href":"/project-patreon-shout/docs/requirements/general-requirements","docId":"requirements/general-requirements"},{"type":"link","label":"Features and Requirements","href":"/project-patreon-shout/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements"},{"type":"link","label":"Use-case descriptions","href":"/project-patreon-shout/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions"}],"href":"/project-patreon-shout/docs/category/requirements-specification"},{"type":"category","label":"Software Development Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activities","href":"/project-patreon-shout/docs/development-plan/activities","docId":"development-plan/activities"},{"type":"link","label":"Tasks","href":"/project-patreon-shout/docs/development-plan/tasks","docId":"development-plan/tasks"},{"type":"link","label":"Schedule","href":"/project-patreon-shout/docs/development-plan/schedule","docId":"development-plan/schedule"},{"type":"link","label":"Development Environment","href":"/project-patreon-shout/docs/development-plan/development-environment","docId":"development-plan/development-environment"},{"type":"link","label":"Version Control","href":"/project-patreon-shout/docs/development-plan/version-control","docId":"development-plan/version-control"}],"href":"/project-patreon-shout/docs/category/software-development-plan"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design","href":"/project-patreon-shout/docs/system-architecture/design","docId":"system-architecture/design"},{"type":"link","label":"Sequence Diagrams","href":"/project-patreon-shout/docs/system-architecture/sequence-diagrams","docId":"system-architecture/sequence-diagrams"}],"href":"/project-patreon-shout/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API Documentation","href":"/project-patreon-shout/docs/api-specification/api-documentation","docId":"api-specification/api-documentation"}],"href":"/project-patreon-shout/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-patreon-shout/docs/testing/unit-testing","docId":"testing/unit-testing"},{"type":"link","label":"Integration tests","href":"/project-patreon-shout/docs/testing/integration-testing","docId":"testing/integration-testing"},{"type":"link","label":"Acceptance test","href":"/project-patreon-shout/docs/testing/acceptence-testing","docId":"testing/acceptence-testing"}],"href":"/project-patreon-shout/docs/category/test-procedures"}]},"docs":{"api-specification/api-documentation":{"id":"api-specification/api-documentation","title":"API Documentation","description":"Gateway Javadocs Documentation","sidebar":"docsSidebar"},"development-plan/activities":{"id":"development-plan/activities","title":"Activities","description":"Requirements Gathering","sidebar":"docsSidebar"},"development-plan/development-environment":{"id":"development-plan/development-environment","title":"Development Environment","description":"Editors and IDEs","sidebar":"docsSidebar"},"development-plan/schedule":{"id":"development-plan/schedule","title":"Schedule","description":"PS_GanttChart","sidebar":"docsSidebar"},"development-plan/tasks":{"id":"development-plan/tasks","title":"Tasks","description":"Listed below are sequential tasks with story points based upon our group\'s estimate of their difficulty. In reality, the","sidebar":"docsSidebar"},"development-plan/version-control":{"id":"development-plan/version-control","title":"Version Control","description":"* GitHub will be used as the version control system for Patreon Shout","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Project Abstract","description":"Patreon Shout is a web application that allows content creators to have their Patreon posts automatically sent to other social platforms. This feature makes posting new content simple and effective. Patreon Shout also caters to users who are not content creators, which we refer to as Patrons. With our main feed, Patrons are able to see and interact with the posts of the Patreon creators they follow with tools to sort and filter their feed the way they like. These features work in tandem to provide a way to improve creator outreach and user interaction.","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Functional Requirements","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"- Any modern browser compatible with HTML5 & JavaScript (Chrome/Firefox/Safari/\u2026)","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"PatreonShout_SystemBlockDiagram drawio","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"Design","description":"Class Diagrams","sidebar":"docsSidebar"},"system-architecture/sequence-diagrams":{"id":"system-architecture/sequence-diagrams","title":"Sequence Diagrams","description":"Use Case 1","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Use Case Acceptance Testing will be performed to ensure that certain features are functional and match the users\u2019 expectations.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Integration testing will be done using Mockito to mock API endpoints in Java to ensure the application properly handles this communication. Jest will be used alongside React to mock objects and ensure smooth user flow.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"Our team will utilize JUnit testing framework to implement unit tests for our Java code and Jest to implement React unit tests. There will be a test for each critical component to ensure proper functionality","sidebar":"docsSidebar"}}}')}}]);