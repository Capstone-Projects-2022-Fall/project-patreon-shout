"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[740],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),d=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=d(a),m=n,h=s["".concat(u,".").concat(m)]||s[m]||p[m]||i;return a?r.createElement(h,l(l({ref:t},c),{},{components:a})):r.createElement(h,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},71357:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return p}});var r=a(83117),n=a(80102),i=(a(67294),a(3905)),l=["components"],o={sidebar_position:3},u="CalculatorModel.java",d={unversionedId:"api-specification/calculator-model-generated",id:"api-specification/calculator-model-generated",title:"CalculatorModel.java",description:"(generated using Javadoc to Markdown)",source:"@site/docs/api-specification/calculator-model-generated.md",sourceDirName:"api-specification",slug:"/api-specification/calculator-model-generated",permalink:"/tu-cis-4398-docs-template/docs/api-specification/calculator-model-generated",draft:!1,editUrl:"https://github.com/ApplebaumIan/tu-cis-4398-docs-template/edit/main/documentation/docs/api-specification/calculator-model-generated.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"API 1 - Swagger Petstore",permalink:"/tu-cis-4398-docs-template/docs/api-specification/openapi-spec"},next:{title:"Test Procedures",permalink:"/tu-cis-4398-docs-template/docs/category/test-procedures"}},c={},p=[{value:"<code>public class CalculatorModel</code>",id:"public-class-calculatormodel",level:2},{value:"<code>private double displayValue</code>",id:"private-double-displayvalue",level:2},{value:"<code>private double internalValue</code>",id:"private-double-internalvalue",level:2},{value:"<code>private String displayString</code>",id:"private-string-displaystring",level:2},{value:"<code>private String operation</code>",id:"private-string-operation",level:2},{value:"<code>private boolean start</code>",id:"private-boolean-start",level:2},{value:"<code>private boolean dot</code>",id:"private-boolean-dot",level:2},{value:"<code>public CalculatorModel()</code>",id:"public-calculatormodel",level:2},{value:"<code>public String getValue()</code>",id:"public-string-getvalue",level:2},{value:"<code>public void update(String text)</code>",id:"public-void-updatestring-text",level:2},{value:"<code>public double operationAdd(double rhs, double lhs)</code>",id:"public-double-operationadddouble-rhs-double-lhs",level:2}],s={toc:p};function m(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"calculatormodeljava"},"CalculatorModel.java"),(0,i.kt)("p",null,"(generated using ",(0,i.kt)("a",{parentName:"p",href:"https://delight-im.github.io/Javadoc-to-Markdown/"},"Javadoc to Markdown"),")"),(0,i.kt)("h2",{id:"public-class-calculatormodel"},(0,i.kt)("inlineCode",{parentName:"h2"},"public class CalculatorModel")),(0,i.kt)("p",null,"This is the model of this MVC implementation of a calculator. It performs the functions of the calculator and keeps track of what the user has entered."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Author:")," Tom Bylander")),(0,i.kt)("h2",{id:"private-double-displayvalue"},(0,i.kt)("inlineCode",{parentName:"h2"},"private double displayValue")),(0,i.kt)("p",null,"This is the numeric value of the number the user is entering, or the number that was just calculated."),(0,i.kt)("h2",{id:"private-double-internalvalue"},(0,i.kt)("inlineCode",{parentName:"h2"},"private double internalValue")),(0,i.kt)("p",null,"This is the previous value entered or calculated."),(0,i.kt)("h2",{id:"private-string-displaystring"},(0,i.kt)("inlineCode",{parentName:"h2"},"private String displayString")),(0,i.kt)("p",null,"This is the String corresponding to what the user. is entering"),(0,i.kt)("h2",{id:"private-string-operation"},(0,i.kt)("inlineCode",{parentName:"h2"},"private String operation")),(0,i.kt)("p",null,"This is the last operation entered by the user."),(0,i.kt)("h2",{id:"private-boolean-start"},(0,i.kt)("inlineCode",{parentName:"h2"},"private boolean start")),(0,i.kt)("p",null,"This is true if the next digit entered starts a new value."),(0,i.kt)("h2",{id:"private-boolean-dot"},(0,i.kt)("inlineCode",{parentName:"h2"},"private boolean dot")),(0,i.kt)("p",null,"This is true if a decimal dot has been entered for the current value."),(0,i.kt)("h2",{id:"public-calculatormodel"},(0,i.kt)("inlineCode",{parentName:"h2"},"public CalculatorModel()")),(0,i.kt)("p",null,"Initializes the instance variables."),(0,i.kt)("h2",{id:"public-string-getvalue"},(0,i.kt)("inlineCode",{parentName:"h2"},"public String getValue()")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Returns:")," the String value of what was just calculated"),(0,i.kt)("p",{parentName:"li"},"or what the user is entering"))),(0,i.kt)("h2",{id:"public-void-updatestring-text"},(0,i.kt)("inlineCode",{parentName:"h2"},"public void update(String text)")),(0,i.kt)("p",null,"Updates the values maintained by the calculator based on the button that the user has just clicked."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"text")," \u2014 is the name of the button that the user has just clicked")),(0,i.kt)("h2",{id:"public-double-operationadddouble-rhs-double-lhs"},(0,i.kt)("inlineCode",{parentName:"h2"},"public double operationAdd(double rhs, double lhs)")),(0,i.kt)("p",null,"Operation to add two numbers. ",(0,i.kt)("pre",null," operationAdd(3,2); // should equal 5.0 ")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rhs")," \u2014 ",(0,i.kt)("inlineCode",{parentName:"li"},"double")," representing the right hand side of the operator"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lhs")," \u2014 ",(0,i.kt)("inlineCode",{parentName:"li"},"double")," representing the left hand side of the operator"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Returns:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"double"))))}m.isMDXComponent=!0}}]);